# Generated by Django 4.2.5 on 2024-01-03 05:43

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import tenant_schemas.postgresql_backend.base


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(blank=True, max_length=150, null=True, unique=True)),
                ('full_name', models.CharField(blank=True, max_length=150, null=True)),
                ('first_name', models.CharField(blank=True, max_length=150, null=True)),
                ('last_name', models.CharField(blank=True, max_length=150, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='email address')),
                ('mobile_no', models.CharField(blank=True, max_length=20, null=True)),
                ('profile_pic', models.ImageField(blank=True, null=True, upload_to='profile_pic/')),
                ('address', models.TextField()),
                ('city', models.CharField(blank=True, max_length=255, null=True)),
                ('state', models.CharField(blank=True, max_length=255, null=True)),
                ('age', models.CharField(blank=True, max_length=255, null=True)),
                ('client_customer_id', models.IntegerField(blank=True, null=True)),
                ('uid', models.UUIDField(blank=True, null=True, unique=True)),
                ('country', models.CharField(blank=True, max_length=255, null=True)),
                ('role_id', models.PositiveIntegerField(blank=True, choices=[(1, 'Super_Admin'), (2, 'Customer'), (3, 'Company')], default=1, null=True)),
                ('status', models.PositiveIntegerField(blank=True, choices=[(1, 'Active'), (2, 'Inactive'), (3, 'Deleted')], default=1, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('customer_id', models.CharField(blank=True, max_length=255, null=True)),
                ('test_taken', models.CharField(blank=True, max_length=255, null=True)),
                ('notification_enable', models.BooleanField(blank=True, default=True, null=True)),
                ('user_feedback', models.TextField(blank=True, null=True)),
                ('user_prefrence', models.PositiveIntegerField(blank=True, choices=[(1, 'HINDI'), (2, 'ENGLISH'), (3, 'PUNJABI'), (4, 'KANNADA'), (5, 'TAMIL'), (6, 'TELUGU')], default=2, null=True)),
                ('user_image', models.ImageField(blank=True, null=True, upload_to='User_Images/')),
                ('face_shape', models.CharField(blank=True, max_length=255, null=True)),
                ('health_score', models.CharField(blank=True, max_length=255, null=True)),
                ('p_distance', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'User_table',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='NumberOfLetterInText',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number_of_letter', models.CharField(blank=True, choices=[('one', 'One Letter'), ('three', 'Three Letter'), ('four', 'Four Letter'), ('five', 'five Letter')], default='two', max_length=10, null=True)),
                ('text', models.CharField(blank=True, max_length=20, null=True)),
                ('used', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'number_of_letter',
            },
        ),
        migrations.CreateModel(
            name='PowerMapping',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('power_mapping', models.CharField(blank=True, choices=[('age_power', 'AgePowerMapping'), ('cyl_power', 'CylPowerMapping')], max_length=10, null=True)),
                ('start_range', models.DecimalField(blank=True, decimal_places=4, max_digits=7, null=True)),
                ('end_range', models.DecimalField(blank=True, decimal_places=4, max_digits=7, null=True)),
                ('power', models.DecimalField(blank=True, decimal_places=4, max_digits=7, null=True)),
            ],
            options={
                'db_table': 'power_mapping',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('image', models.ImageField(blank=True, max_length=225, null=True, upload_to='products/')),
                ('mrp_price', models.IntegerField()),
                ('discount_price', models.IntegerField()),
                ('shape', models.CharField(blank=True, choices=[('oval', 'Oval'), ('squared', 'Squared'), ('round', 'Round'), ('triangle', 'Triangle'), ('rectangular', 'Rectangular'), ('oblong', 'Oblong')], default='oval', max_length=12, null=True)),
                ('website_url', models.URLField(blank=True, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('users', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'product',
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'question',
            },
        ),
        migrations.CreateModel(
            name='ReportIssue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('admin_mail', models.EmailField(blank=True, max_length=254, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('subject', models.CharField(blank=True, max_length=255, null=True)),
                ('issue_description', models.TextField(blank=True, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_on', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'Report Issue',
            },
        ),
        migrations.CreateModel(
            name='SnellenFraction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test', models.CharField(blank=True, choices=[('myopia', 'myopia'), ('hyperopia', 'hyperopia')], max_length=10, null=True)),
                ('snellen_fraction', models.CharField(blank=True, max_length=100, null=True)),
                ('power', models.DecimalField(blank=True, decimal_places=4, max_digits=7, null=True)),
                ('left_action', models.DecimalField(blank=True, decimal_places=4, max_digits=7, null=True)),
                ('right_action', models.DecimalField(blank=True, decimal_places=4, max_digits=7, null=True)),
            ],
            options={
                'db_table': 'snellen_fraction',
            },
        ),
        migrations.CreateModel(
            name='SubscriptionPlanCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True, null=True)),
            ],
            options={
                'db_table': 'subscription_plan_category',
            },
        ),
        migrations.CreateModel(
            name='SubscriptionPlans',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('sp_price', models.IntegerField()),
                ('start_date', models.DateField(blank=True, null=True)),
                ('expired_date', models.DateField(blank=True, null=True)),
                ('mode_of_payment', models.PositiveIntegerField(blank=True, choices=[(1, 'Strip'), (2, 'Other')], default=1, null=True)),
                ('subscription_plan_type', models.PositiveIntegerField(blank=True, choices=[(1, 'Basic Plan'), (2, 'Enterprise'), (3, 'Advance Plan')], default=1, null=True)),
                ('paymod', models.PositiveIntegerField(blank=True, choices=[(1, 'Prepaid'), (2, 'Postpaid')], default=1, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_on', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('plan_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.subscriptionplancategory')),
                ('product', models.ManyToManyField(to='api.product')),
            ],
            options={
                'db_table': 'subscription_plans',
            },
        ),
        migrations.CreateModel(
            name='Transactions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.CharField(blank=True, default=0, max_length=255, null=True)),
                ('currency', models.CharField(blank=True, default=0, max_length=255, null=True)),
                ('receipt_url', models.TextField()),
                ('transaction_id', models.CharField(blank=True, default=0, max_length=255, null=True)),
                ('payment_status', models.CharField(blank=True, default=0, max_length=255, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('payment_type', models.PositiveIntegerField(blank=True, choices=[(1, 'Payment'), (2, 'Refund')], default=1, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='payment_created_by', to=settings.AUTH_USER_MODEL)),
                ('subscription', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.subscriptionplans')),
            ],
            options={
                'db_table': 'tbl_transaction',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='SunglassShapes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shapes', models.PositiveIntegerField(blank=True, choices=[(1, 'Squared'), (2, ' Round'), (3, 'Triangle'), (4, 'Rectangular'), (5, 'Oblong')], null=True)),
                ('website_url', models.URLField(blank=True, null=True)),
                ('option1', models.ImageField(blank=True, max_length=225, null=True, upload_to='singlass_options')),
                ('option2', models.ImageField(blank=True, max_length=225, null=True, upload_to='singlass_options')),
                ('option3', models.ImageField(blank=True, max_length=225, null=True, upload_to='singlass_options')),
                ('option4', models.ImageField(blank=True, max_length=225, null=True, upload_to='singlass_options')),
                ('created_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, max_length=225, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'tbl_sunglass_shapes',
            },
        ),
        migrations.CreateModel(
            name='SpeachText',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(blank=True, null=True)),
                ('text_language', models.PositiveIntegerField(blank=True, choices=[(1, 'HINDI'), (2, 'ENGLISH'), (3, 'PUNJABI'), (4, 'KANNADA'), (5, 'TAMIL'), (6, 'TELUGU')], default=2, null=True)),
                ('page', models.CharField(blank=True, max_length=200, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'tbl_speach_text',
            },
        ),
        migrations.CreateModel(
            name='ReportReply',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reply', models.TextField(blank=True, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('report', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.reportissue')),
            ],
            options={
                'db_table': 'tbl_report_reply',
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('image', models.FileField(blank=True, null=True, upload_to='notification_image')),
                ('is_read', models.BooleanField(blank=True, default=False, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_on', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='created_by', to=settings.AUTH_USER_MODEL)),
                ('users', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'Notification_Information',
            },
        ),
        migrations.CreateModel(
            name='Logo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('logo_text', models.CharField(blank=True, max_length=255, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('clients', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='clients', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='client_created_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'tbl_logo',
            },
        ),
        migrations.CreateModel(
            name='EyeTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('eye_status', models.CharField(choices=[('left', 'Left Eye'), ('right', 'Right Eye')], default='left', max_length=5)),
                ('test', models.CharField(blank=True, choices=[('myopia', 'Myopia Test'), ('hyperopia', 'Hyperopia Test'), ('presbyopia', 'Presbyopia Test')], default='myopia', max_length=10, null=True)),
                ('choose_astigmatism', models.CharField(blank=True, choices=[('a', 'A'), ('b', 'B'), ('c', 'C'), ('d', 'D')], default='A', max_length=10, null=True)),
                ('degree', models.CharField(blank=True, max_length=20, null=True)),
                ('myopia_snellen_fraction', models.CharField(blank=True, max_length=20, null=True)),
                ('hyperopia_snellen_fraction', models.CharField(blank=True, max_length=20, null=True)),
                ('myopia_sph_power', models.CharField(blank=True, max_length=20, null=True)),
                ('hyperopia_sph_power', models.CharField(blank=True, max_length=20, null=True)),
                ('cyl_text_size', models.CharField(blank=True, max_length=20, null=True)),
                ('cyl_power', models.CharField(blank=True, max_length=20, null=True)),
                ('age_power', models.CharField(blank=True, max_length=20, null=True)),
                ('reading_test_snellen_fraction', models.CharField(blank=True, max_length=20, null=True)),
                ('is_completed', models.BooleanField(default=False)),
                ('test_created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('selected_question', models.ManyToManyField(blank=True, to='api.question')),
                ('test_of_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='test_of_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'eye_test',
            },
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_type', models.PositiveIntegerField(blank=True, choices=[(1, 'Android'), (2, 'IOS')], null=True)),
                ('device_name', models.CharField(blank=True, max_length=500, null=True)),
                ('device_token', models.CharField(blank=True, max_length=500, null=True)),
                ('created_by', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'tbl_device',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='CompanyInformation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('domain_url', models.CharField(max_length=128, unique=True)),
                ('schema_name', models.CharField(max_length=63, unique=True, validators=[tenant_schemas.postgresql_backend.base._check_schema_name])),
                ('company_name', models.CharField(blank=True, max_length=255, null=True)),
                ('official_number', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(blank=True, max_length=255, null=True)),
                ('state', models.CharField(blank=True, max_length=255, null=True)),
                ('country', models.CharField(blank=True, max_length=255, null=True)),
                ('official_website', models.URLField(blank=True, null=True)),
                ('official_domain_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('business_id', models.CharField(blank=True, max_length=255, null=True)),
                ('requirement', models.CharField(blank=True, max_length=255, null=True)),
                ('name_of_person', models.CharField(blank=True, max_length=255, null=True)),
                ('daily_traffic', models.CharField(blank=True, max_length=255, null=True)),
                ('designation', models.CharField(blank=True, max_length=255, null=True)),
                ('daily_business', models.CharField(blank=True, max_length=255, null=True)),
                ('company_address', models.CharField(blank=True, max_length=255, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('package_status', models.CharField(blank=True, max_length=255, null=True)),
                ('company_uid', models.UUIDField(blank=True, null=True, unique=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'Company_Information',
            },
        ),
        migrations.CreateModel(
            name='Banners',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('image', models.FileField(blank=True, null=True, upload_to='banner_image')),
                ('created_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_on', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.companyinformation')),
            ],
            options={
                'db_table': 'tbl_banners',
            },
        ),
        migrations.AddField(
            model_name='user',
            name='company',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.companyinformation'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
    ]
